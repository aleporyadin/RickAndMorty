{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\rickandmortyv2\\\\rickandmortyv2\\\\src\\\\main\\\\kotlin\\\\com\\\\rickandmorty\\\\api\\\\ui\\\\src\\\\TableCharacter.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TableCharacter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.filterSearchForName = this.filterSearchForName.bind(this);\n  }\n\n  filterSearchForName(e) {\n    if (e.key === 'Enter') {\n      this.setState({\n        items: this.state.items.filter(item => {\n          if (!e.target.value.length) this.getjson();\n\n          if (item.name.toLowerCase().search(e.target.value.toLowerCase()) !== -1) {\n            return item;\n          } else {\n            return null;\n          }\n        }),\n        isLoaded: true,\n        error: false\n      });\n    }\n  }\n\n  getjson() {\n    fetch(\"http://localhost:9901/characters\").then(res => res.json()).then(data => {\n      return {\n        isLoaded: true,\n        items: data\n      };\n    }, error => {\n      return {\n        isLoaded: true,\n        error\n      };\n    });\n  }\n\n  setjson() {\n    fetch(\"http://localhost:9901/characters\").then(res => res.json()).then(data => {\n      console.log(data);\n      this.setState({\n        isLoaded: true,\n        items: data\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.setjson();\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search by name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Go search by name: \",\n          className: \"search-inp\",\n          onKeyDown: this.filterSearchForName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"content-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Species\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: items.map((item, line) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.species\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.gender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: \"Edit\",\n                  className: \"btn btn-edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this)]\n            }, line, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 20\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n} // { {items.foreach( item=> (\n//   <tr>\n//   <td key={item.id}>{item.id}</td>\n//   <td key={item.name}>{item.name}</td>\n//   <td key={item.status}>{item.status}</td>\n//   <td key={item.species}>{item.species}</td>\n//   <td key={item.type}>{item.type}</td>\n//   <td key={item.gender}>{item.gender}</td>\n//   </tr>\n// ))}  }","map":{"version":3,"sources":["D:/Projects/rickandmortyv2/rickandmortyv2/src/main/kotlin/com/rickandmorty/api/ui/src/TableCharacter.js"],"names":["React","TableCharacter","Component","constructor","props","state","filterSearchForName","bind","e","key","setState","items","filter","item","target","value","length","getjson","name","toLowerCase","search","isLoaded","error","fetch","then","res","json","data","setjson","console","log","componentDidMount","render","message","map","line","id","status","species","type","gender"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,cAAN,SAA6BD,KAAK,CAACE,SAAnC,CAA6C;AAC1DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACH;;AAEDD,EAAAA,mBAAmB,CAACE,CAAD,EAAG;AAEpB,QAAGA,CAAC,CAACC,GAAF,KAAU,OAAb,EAAqB;AAEnB,WAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EACH,KAAKN,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAyBC,IAAD,IAAQ;AAChC,cAAI,CAACL,CAAC,CAACM,MAAF,CAASC,KAAT,CAAeC,MAApB,EAA4B,KAAKC,OAAL;;AAC5B,cAAGJ,IAAI,CAACK,IAAL,CAAUC,WAAV,GAAwBC,MAAxB,CAA+BZ,CAAC,CAACM,MAAF,CAASC,KAAT,CAAeI,WAAf,EAA/B,MAA+D,CAAC,CAAnE,EAAqE;AACnE,mBAAON,IAAP;AACD,WAFD,MAEK;AAAC,mBAAO,IAAP;AAAY;AAAC,SAJnB,CAFU;AAOZQ,QAAAA,QAAQ,EAAE,IAPE;AAQZC,QAAAA,KAAK,EAAE;AARK,OAAd;AAUD;AACF;;AAEDL,EAAAA,OAAO,GAAE;AACPM,IAAAA,KAAK,CAAC,kCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGWG,IAAD,IAAU;AACN,aAAO;AAACN,QAAAA,QAAQ,EAAE,IAAX;AAAgBV,QAAAA,KAAK,EAAEgB;AAAvB,OAAP;AACH,KALX,EAOWL,KAAD,IAAW;AAEP,aAAO;AAACD,QAAAA,QAAQ,EAAE,IAAX;AAAgBC,QAAAA;AAAhB,OAAP;AAEH,KAXX;AAYD;;AACDM,EAAAA,OAAO,GAAE;AACPL,IAAAA,KAAK,CAAC,kCAAD,CAAL,CACOC,IADP,CACYC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADnB,EAEOF,IAFP,CAGWG,IAAD,IAAU;AACRE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACE,WAAKjB,QAAL,CAAc;AACVW,QAAAA,QAAQ,EAAE,IADA;AAEVV,QAAAA,KAAK,EAAEgB;AAFG,OAAd;AAIH,KATX,EAWWL,KAAD,IAAW;AACP,WAAKZ,QAAL,CAAc;AACVW,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA;AAFU,OAAd;AAIH,KAhBX;AAiBD;;AAEDS,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,OAAL;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEV,MAAAA,KAAF;AAASD,MAAAA,QAAT;AAAmBV,MAAAA;AAAnB,QAA6B,KAAKN,KAAxC;;AAEA,QAAIiB,KAAJ,EAAW;AACT,0BAAO;AAAA,8BAAaA,KAAK,CAACW,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,CAACZ,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADN,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,qBAA/B;AAAqD,UAAA,SAAS,EAAC,YAA/D;AAA4E,UAAA,SAAS,EAAE,KAAKf;AAA5F;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,UAAA,EAAE,EAAC,eAAV;AAAA,kCACA;AAAA,mCACI;AAAA,sCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALA,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADA,eAYA;AAAA,sBAGKK,KAAK,CAACuB,GAAN,CAAU,CAACrB,IAAD,EAAMsB,IAAN,kBAEN;AAAA,sCACC;AAAA,0BAAMtB,IAAI,CAACuB;AAAX;AAAA;AAAA;AAAA;AAAA,sBADD,eAEC;AAAA,0BAAMvB,IAAI,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,sBAFD,eAGC;AAAA,0BAAML,IAAI,CAACwB;AAAX;AAAA;AAAA;AAAA;AAAA,sBAHD,eAIC;AAAA,0BAAMxB,IAAI,CAACyB;AAAX;AAAA;AAAA;AAAA;AAAA,sBAJD,eAKC;AAAA,0BAAMzB,IAAI,CAAC0B;AAAX;AAAA;AAAA;AAAA;AAAA,sBALD,eAMC;AAAA,0BAAM1B,IAAI,CAAC2B;AAAX;AAAA;AAAA;AAAA;AAAA,sBAND,eAOC;AAAA,uCACE;AAAO,kBAAA,IAAI,EAAC,QAAZ;AAAqB,kBAAA,KAAK,EAAC,MAA3B;AAAkC,kBAAA,SAAS,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAPD;AAAA,eAASL,IAAT;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAHL;AAAA;AAAA;AAAA;AAAA,kBAZA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAwCD;AACF;;AA/GyD,C,CAkH5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import React from \"react\";\r\n\r\nexport default class TableCharacter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.filterSearchForName = this.filterSearchForName.bind(this);\r\n}\r\n\r\nfilterSearchForName(e){\r\n  \r\n  if(e.key === 'Enter'){   \r\n     \r\n    this.setState({\r\n      items:\r\n        this.state.items.filter((item)=>{\r\n        if (!e.target.value.length) this.getjson();\r\n        if(item.name.toLowerCase().search(e.target.value.toLowerCase())!==-1){\r\n          return item;\r\n        }else{return null}}),\r\n      isLoaded: true, \r\n      error: false\r\n    })\r\n  }\r\n}\r\n\r\ngetjson(){\r\n  fetch(\"http://localhost:9901/characters\")\r\n    .then(res => res.json())\r\n    .then(\r\n            (data) => {\r\n                return {isLoaded: true,items: data};\r\n            },\r\n\r\n            (error) => {\r\n             \r\n                return {isLoaded: true,error};\r\n\r\n            })\r\n}\r\nsetjson(){\r\n  fetch(\"http://localhost:9901/characters\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (data) => {\r\n              console.log(data)\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    items: data\r\n                });\r\n            },\r\n\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            })\r\n}\r\n\r\ncomponentDidMount() {\r\n  this.setjson();\r\n}\r\n\r\nrender() {\r\n    const { error, isLoaded, items } = this.state;\r\n\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n              <h2>Search by name</h2>\r\n          <input type=\"text\" placeholder=\"Go search by name: \" className=\"search-inp\" onKeyDown={this.filterSearchForName}/>\r\n          <table id=\"content-table\">\r\n          <thead>\r\n              <tr>\r\n              <th>ID</th>\r\n              <th>Name</th>\r\n              <th>Status</th>\r\n              <th>Species</th>\r\n              <th>Type</th>\r\n              <th>Gender</th>\r\n              </tr>\r\n              \r\n          </thead>\r\n          <tbody>\r\n            \r\n            { \r\n               items.map((item,line)=>(\r\n                 \r\n                   <tr key={line}>\r\n                    <td >{item.id}</td>\r\n                    <td >{item.name}</td>\r\n                    <td >{item.status}</td>\r\n                    <td >{item.species}</td>\r\n                    <td >{item.type}</td>\r\n                    <td >{item.gender}</td>\r\n                    <td >\r\n                      <input type=\"submit\" value=\"Edit\" className=\"btn btn-edit\"></input>\r\n                    </td>\r\n                  </tr>\r\n                )  \r\n              )\r\n            }\r\n\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n// { {items.foreach( item=> (\r\n//   <tr>\r\n//   <td key={item.id}>{item.id}</td>\r\n//   <td key={item.name}>{item.name}</td>\r\n//   <td key={item.status}>{item.status}</td>\r\n//   <td key={item.species}>{item.species}</td>\r\n//   <td key={item.type}>{item.type}</td>\r\n//   <td key={item.gender}>{item.gender}</td>\r\n\r\n//   </tr>\r\n// ))}  } "]},"metadata":{},"sourceType":"module"}