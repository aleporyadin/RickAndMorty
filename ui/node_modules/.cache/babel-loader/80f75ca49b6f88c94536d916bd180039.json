{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Projects/api/rickandmortyui/ui/src/TableCharacter.js\";\nimport React, { Component } from \"react\";\nimport EditCharacter from \"./EditCharacter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TableCharacter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getModal = value => {\n      this.setState({\n        showModal: value\n      });\n    };\n\n    this.hideModal = value => {\n      this.setState({\n        showModal: 0\n      });\n    };\n\n    this.state = {\n      showModal: 0\n    };\n    this.filterSearchByName = this.filterSearchByName.bind(this);\n  }\n\n  filterSearchByName(e) {\n    if (e.key === \"Enter\") {\n      if (!e.target.value.length) this.setjson();\n      this.setjson();\n      this.setState({\n        items: this.state.items.filter(item => {\n          if (item.name.toLowerCase().search(e.target.value.toLowerCase()) !== -1) return item;else return null;\n        }),\n        isLoaded: true,\n        error: false,\n        showModal: 0\n      });\n    }\n  }\n\n  setjson() {\n    fetch(\"http://localhost:8080/characters\").then(res => res.json()).then(data => {\n      this.setState({\n        isLoaded: true,\n        items: data,\n        showModal: 0\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error,\n        showModal: 0\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.setjson();\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search by name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Go search by name: \",\n          className: \"search-inp\",\n          onKeyDown: this.filterSearchByName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"content-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Species\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: items.map((item, line) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.species\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.gender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"button\",\n                  value: \"Edit\",\n                  className: \"btn btn-edit\",\n                  onClick: () => this.getModal(item.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(EditCharacter, {\n                  characters: this.state.items,\n                  show: this.state.showModal === item.id,\n                  onHide: () => this.hideModal(item.id),\n                  id: item.id,\n                  name: item.name,\n                  status: item.status,\n                  species: item.species,\n                  type: item.type,\n                  gender: item.gender\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)]\n            }, line, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/user/Documents/Projects/api/rickandmortyui/ui/src/TableCharacter.js"],"names":["React","Component","EditCharacter","TableCharacter","constructor","props","getModal","value","setState","showModal","hideModal","state","filterSearchByName","bind","e","key","target","length","setjson","items","filter","item","name","toLowerCase","search","isLoaded","error","fetch","then","res","json","data","componentDidMount","render","message","map","line","id","status","species","type","gender"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,eAAe,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AACpDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkDnBC,QAlDmB,GAkDPC,KAAD,IAAW;AACpB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEF;AAAb,OAAd;AACD,KApDkB;;AAAA,SAsDnBG,SAtDmB,GAsDNH,KAAD,IAAW;AACrB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAxDkB;;AAEjB,SAAKE,KAAL,GAAa;AAAEF,MAAAA,SAAS,EAAE;AAAb,KAAb;AACA,SAAKG,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACD;;AAEDD,EAAAA,kBAAkB,CAACE,CAAD,EAAI;AACpB,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrB,UAAI,CAACD,CAAC,CAACE,MAAF,CAAST,KAAT,CAAeU,MAApB,EAA4B,KAAKC,OAAL;AAC5B,WAAKA,OAAL;AACA,WAAKV,QAAL,CAAc;AACZW,QAAAA,KAAK,EAAE,KAAKR,KAAL,CAAWQ,KAAX,CAAiBC,MAAjB,CACFC,IAAD,IAAU;AACR,cAAIA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,MAAxB,CAA+BV,CAAC,CAACE,MAAF,CAAST,KAAT,CAAegB,WAAf,EAA/B,MAAiE,CAAC,CAAtE,EAAyE,OAAOF,IAAP,CAAzE,KACO,OAAO,IAAP;AACN,SAJA,CADK;AAOVI,QAAAA,QAAQ,EAAE,IAPA;AAQVC,QAAAA,KAAK,EAAE,KARG;AASVjB,QAAAA,SAAS,EAAE;AATD,OAAd;AAYD;AACF;;AAKDS,EAAAA,OAAO,GAAG;AACRS,IAAAA,KAAK,CAAC,kCAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAGKG,IAAD,IAAU;AACR,WAAKvB,QAAL,CAAc;AACZiB,QAAAA,QAAQ,EAAE,IADE;AAEZN,QAAAA,KAAK,EAAEY,IAFK;AAGZtB,QAAAA,SAAS,EAAE;AAHC,OAAd;AAKD,KATL,EAWKiB,KAAD,IAAW;AACT,WAAKlB,QAAL,CAAc;AACZiB,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAFY;AAGZjB,QAAAA,SAAS,EAAE;AAHC,OAAd;AAKD,KAjBL;AAmBD;;AASDuB,EAAAA,iBAAiB,GAAG;AAClB,SAAKd,OAAL;AACD;;AAEDe,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,KAAF;AAASD,MAAAA,QAAT;AAAmBN,MAAAA;AAAnB,QAA6B,KAAKR,KAAxC;;AAEA,QAAIe,KAAJ,EAAW;AACT,0BAAO;AAAA,8BAAaA,KAAK,CAACQ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,CAACT,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,qBAFd;AAGE,UAAA,SAAS,EAAC,YAHZ;AAIE,UAAA,SAAS,EAAE,KAAKb;AAJlB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE;AAAO,UAAA,EAAE,EAAC,eAAV;AAAA,kCACE;AAAA,mCACE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE;AAAA,sBACGO,KAAK,CAACgB,GAAN,CAAU,CAACd,IAAD,EAAOe,IAAP,kBACT;AAAA,sCACE;AAAA,0BAAKf,IAAI,CAACgB;AAAV;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,0BAAKhB,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAA,0BAAKD,IAAI,CAACiB;AAAV;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE;AAAA,0BAAKjB,IAAI,CAACkB;AAAV;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE;AAAA,0BAAKlB,IAAI,CAACmB;AAAV;AAAA;AAAA;AAAA;AAAA,sBALF,eAME;AAAA,0BAAKnB,IAAI,CAACoB;AAAV;AAAA;AAAA;AAAA;AAAA,sBANF,eAOE;AAAA,wCACE;AACE,kBAAA,IAAI,EAAC,QADP;AAEE,kBAAA,KAAK,EAAC,MAFR;AAGE,kBAAA,SAAS,EAAC,cAHZ;AAIE,kBAAA,OAAO,EAAE,MAAI,KAAKnC,QAAL,CAAce,IAAI,CAACgB,EAAnB;AAJf;AAAA;AAAA;AAAA;AAAA,wBADF,eAOE,QAAC,aAAD;AACA,kBAAA,UAAU,EAAG,KAAK1B,KAAL,CAAWQ,KADxB;AAEE,kBAAA,IAAI,EAAE,KAAKR,KAAL,CAAWF,SAAX,KAAyBY,IAAI,CAACgB,EAFtC;AAGE,kBAAA,MAAM,EAAE,MAAM,KAAK3B,SAAL,CAAeW,IAAI,CAACgB,EAApB,CAHhB;AAIE,kBAAA,EAAE,EAAEhB,IAAI,CAACgB,EAJX;AAKE,kBAAA,IAAI,EAAEhB,IAAI,CAACC,IALb;AAME,kBAAA,MAAM,EAAED,IAAI,CAACiB,MANf;AAOE,kBAAA,OAAO,EAAEjB,IAAI,CAACkB,OAPhB;AAQE,kBAAA,IAAI,EAAElB,IAAI,CAACmB,IARb;AASE,kBAAA,MAAM,EAAEnB,IAAI,CAACoB;AATf;AAAA;AAAA;AAAA;AAAA,wBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA,eAASL,IAAT;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAwDD;AACF;;AA/HmD","sourcesContent":["import React, { Component } from \"react\";\nimport EditCharacter from \"./EditCharacter\";\n\nexport default class TableCharacter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { showModal: 0 };\n    this.filterSearchByName = this.filterSearchByName.bind(this);\n  }\n\n  filterSearchByName(e) {\n    if (e.key === \"Enter\") {\n      if (!e.target.value.length) this.setjson();\n      this.setjson()\n      this.setState({\n        items: this.state.items.filter(\n            (item) => {\n              if (item.name.toLowerCase().search(e.target.value.toLowerCase()) !== -1) return item;\n                else return null;\n              }\n            ),\n          isLoaded: true,\n          error: false,\n          showModal: 0,\n        }\n      );\n    } \n  }\n\n\n\n\n  setjson() {\n    fetch(\"http://localhost:8080/characters\")\n      .then((res) => res.json())\n      .then(\n        (data) => {\n          this.setState({\n            isLoaded: true,\n            items: data,\n            showModal: 0,\n          });\n        },\n\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n            showModal: 0,\n          });\n        }\n      );\n  }\n\n  getModal = (value) => {\n    this.setState({ showModal: value });\n  };\n\n  hideModal = (value) => {\n    this.setState({ showModal: 0 });\n  };\n  componentDidMount() {\n    this.setjson();\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div className=\"container\">\n          <h2>Search by name</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Go search by name: \"\n            className=\"search-inp\"\n            onKeyDown={this.filterSearchByName}\n          />\n          <table id=\"content-table\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Name</th>\n                <th>Status</th>\n                <th>Species</th>\n                <th>Type</th>\n                <th>Gender</th>\n              </tr>\n            </thead>\n            <tbody>\n              {items.map((item, line) => (\n                <tr key={line}>\n                  <td>{item.id}</td>\n                  <td>{item.name}</td>\n                  <td>{item.status}</td>\n                  <td>{item.species}</td>\n                  <td>{item.type}</td>\n                  <td>{item.gender}</td>\n                  <td>\n                    <input\n                      type=\"button\"\n                      value=\"Edit\"\n                      className=\"btn btn-edit\"\n                      onClick={()=>this.getModal(item.id)}/>\n\n                    <EditCharacter\n                    characters ={this.state.items}\n                      show={this.state.showModal === item.id}\n                      onHide={() => this.hideModal(item.id)}\n                      id={item.id}\n                      name={item.name}\n                      status={item.status}\n                      species={item.species}\n                      type={item.type}\n                      gender={item.gender}/>\n                  \n                  </td>\n         \n                </tr>\n                \n              ))}\n            </tbody>\n          </table>\n        </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}