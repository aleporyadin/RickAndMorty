{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\rickandmortyv2\\\\rickandmortyv2\\\\src\\\\main\\\\kotlin\\\\com\\\\rickandmorty\\\\api\\\\ui\\\\src\\\\TableCharacter.js\";\nimport React, { Component } from \"react\";\nimport EditCharacter from \"./EditCharacter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TableCharacter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getModal = value => {\n      this.setState({\n        showModal: value\n      });\n    };\n\n    this.hideModal = value => {\n      this.setState({\n        showModal: 0\n      });\n    };\n\n    this.state = {\n      showModal: 0\n    };\n    this.filterSearchForName = this.filterSearchForName.bind(this);\n  }\n\n  filterSearchForName(e) {\n    if (e.key === \"Enter\") {\n      this.setState({\n        items: this.state.items.filter(item => {\n          if (!e.target.value.length) this.setjson();\n\n          if (item.name.toLowerCase().search(e.target.value.toLowerCase()) !== -1) {\n            return item;\n          } else {\n            return null;\n          }\n        }),\n        isLoaded: true,\n        error: false,\n        showModal: 0\n      });\n    }\n  }\n\n  getjson() {\n    fetch(\"http://localhost:9901/characters\").then(res => res.json()).then(data => {\n      var result = {\n        isLoaded: true,\n        items: data,\n        showModal: 0\n      };\n      return result;\n    }, error => {\n      var result = {\n        isLoaded: true,\n        error,\n        showModal: 0\n      };\n      return result;\n    });\n  }\n\n  setjson() {\n    fetch(\"http://localhost:9901/characters\").then(res => res.json()).then(data => {\n      this.setState({\n        isLoaded: true,\n        items: data,\n        showModal: 0\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error,\n        showModal: 0\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.setjson();\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search by name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Go search by name: \",\n          className: \"search-inp\",\n          onKeyDown: this.filterSearchForName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"content-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Species\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: items.map((item, line) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.species\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.gender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"button\",\n                  value: \"Edit\",\n                  className: \"btn btn-edit\",\n                  onClick: () => this.getModal(item.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(EditCharacter, {\n                  show: this.state.showModal === item.id,\n                  onHide: () => this.hideModal(item.id),\n                  name: item.name,\n                  status: item.status,\n                  species: item.species,\n                  type: item.type,\n                  gender: item.gender\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)]\n            }, line, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["D:/Projects/rickandmortyv2/rickandmortyv2/src/main/kotlin/com/rickandmorty/api/ui/src/TableCharacter.js"],"names":["React","Component","EditCharacter","TableCharacter","constructor","props","getModal","value","setState","showModal","hideModal","state","filterSearchForName","bind","e","key","items","filter","item","target","length","setjson","name","toLowerCase","search","isLoaded","error","getjson","fetch","then","res","json","data","result","componentDidMount","render","message","map","line","id","status","species","type","gender"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport EditCharacter from \"./EditCharacter\";\r\n\r\nexport default class TableCharacter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { showModal: 0 };\r\n    this.filterSearchForName = this.filterSearchForName.bind(this);\r\n  }\r\n\r\n  filterSearchForName(e) {\r\n    if (e.key === \"Enter\") {\r\n      this.setState({\r\n        items: this.state.items.filter((item) => {\r\n          if (!e.target.value.length) this.setjson();\r\n          if (\r\n            item.name.toLowerCase().search(e.target.value.toLowerCase()) !== -1\r\n          ) {\r\n            return item;\r\n          } else {\r\n            return null;\r\n          }\r\n        }),\r\n        isLoaded: true,\r\n        error: false,\r\n        showModal: 0,\r\n      });\r\n    }\r\n  }\r\n\r\n  getjson() {\r\n    fetch(\"http://localhost:9901/characters\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (data) => {\r\n          var result = { isLoaded: true, items: data, showModal: 0 };\r\n          return result;\r\n        },\r\n        (error) => {\r\n          var result = { isLoaded: true, error, showModal: 0 };\r\n          return result;\r\n        }\r\n      );\r\n  }\r\n\r\n  setjson() {\r\n    fetch(\"http://localhost:9901/characters\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (data) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: data,\r\n            showModal: 0,\r\n          });\r\n        },\r\n\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n            showModal: 0,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  getModal = (value) => {\r\n    this.setState({ showModal: value });\r\n  };\r\n\r\n  hideModal = (value) => {\r\n    this.setState({ showModal: 0 });\r\n  };\r\n  componentDidMount() {\r\n    this.setjson();\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, items } = this.state;\r\n\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          <h2>Search by name</h2>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Go search by name: \"\r\n            className=\"search-inp\"\r\n            onKeyDown={this.filterSearchForName}\r\n          />\r\n          <table id=\"content-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>Status</th>\r\n                <th>Species</th>\r\n                <th>Type</th>\r\n                <th>Gender</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {items.map((item, line) => (\r\n                <tr key={line}>\r\n                  <td>{item.id}</td>\r\n                  <td>{item.name}</td>\r\n                  <td>{item.status}</td>\r\n                  <td>{item.species}</td>\r\n                  <td>{item.type}</td>\r\n                  <td>{item.gender}</td>\r\n                  <td>\r\n                    <input\r\n                      type=\"button\"\r\n                      value=\"Edit\"\r\n                      className=\"btn btn-edit\"\r\n                      onClick={() => this.getModal(item.id)}\r\n                    ></input>\r\n                    <EditCharacter\r\n                      show={this.state.showModal === item.id}\r\n                      onHide={() => this.hideModal(item.id)}\r\n                      name={item.name}\r\n                      status={item.status}\r\n                      species={item.species}\r\n                      type={item.type}\r\n                      gender={item.gender}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}