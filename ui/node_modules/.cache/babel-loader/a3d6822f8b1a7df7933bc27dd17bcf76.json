{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\rickandmortyv2\\\\rickandmortyv2\\\\src\\\\main\\\\kotlin\\\\com\\\\rickandmorty\\\\api\\\\ui\\\\src\\\\TableCharacter.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TableCharacter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.filterSearchForName = this.filterSearchForName.bind(this);\n  }\n\n  filterSearchForName(e) {\n    if (e.key === \"Enter\") {\n      this.setState({\n        items: () => {\n          var result = this.getjson();\n          result.filter(item => {\n            if (!e.target.value.length) this.getjson();\n\n            if (item.name.toLowerCase().search(e.target.value.toLowerCase()) !== -1) {\n              return item;\n            } else {\n              return null;\n            }\n          });\n        },\n        isLoaded: true,\n        error: false\n      });\n    }\n  }\n\n  getjson() {\n    fetch(\"http://localhost:9901/characters\").then(res => res.json()).then(data => {\n      var result = {\n        isLoaded: true,\n        items: data\n      };\n      return result;\n    }, error => {\n      var result = {\n        isLoaded: true,\n        error\n      };\n      return result;\n    });\n  }\n\n  setjson() {\n    fetch(\"http://localhost:9901/characters\").then(res => res.json()).then(data => {\n      this.setState({\n        isLoaded: true,\n        items: data\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.setjson();\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search by name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Go search by name: \",\n          className: \"search-inp\",\n          onKeyDown: this.filterSearchForName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"content-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Species\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: items.map((item, line) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.species\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.gender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: \"Edit\",\n                  className: \"btn btn-edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this)]\n            }, line, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n} // { {items.foreach( item=> (\n//   <tr>\n//   <td key={item.id}>{item.id}</td>\n//   <td key={item.name}>{item.name}</td>\n//   <td key={item.status}>{item.status}</td>\n//   <td key={item.species}>{item.species}</td>\n//   <td key={item.type}>{item.type}</td>\n//   <td key={item.gender}>{item.gender}</td>\n//   </tr>\n// ))}  }","map":{"version":3,"sources":["D:/Projects/rickandmortyv2/rickandmortyv2/src/main/kotlin/com/rickandmorty/api/ui/src/TableCharacter.js"],"names":["React","TableCharacter","Component","constructor","props","state","filterSearchForName","bind","e","key","setState","items","result","getjson","filter","item","target","value","length","name","toLowerCase","search","isLoaded","error","fetch","then","res","json","data","setjson","componentDidMount","render","message","map","line","id","status","species","type","gender"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nexport default class TableCharacter extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.filterSearchForName = this.filterSearchForName.bind(this);\r\n  }\r\n\r\n  filterSearchForName(e) {\r\n    if (e.key === \"Enter\") {\r\n      this.setState({\r\n        items: ()=>{      \r\n          var result = this.getjson()\r\n          result.filter((item) => {\r\n          if (!e.target.value.length) this.getjson();\r\n          if (\r\n            item.name.toLowerCase().search(e.target.value.toLowerCase()) !== -1\r\n          ) {\r\n            return item;\r\n          } else {\r\n            return null;\r\n          }\r\n        })},\r\n        isLoaded: true,\r\n        error: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  getjson() {\r\n    fetch(\"http://localhost:9901/characters\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (data) => {\r\n          var result =  { isLoaded: true, items: data }\r\n          return result;\r\n        },\r\n        (error) => {\r\n          var result =  { isLoaded: true, error };\r\n          return result;\r\n        }\r\n      );\r\n  }\r\n\r\n  setjson() {\r\n    fetch(\"http://localhost:9901/characters\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (data) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: data,\r\n          });\r\n        },\r\n\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setjson();\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, items } = this.state;\r\n\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          <h2>Search by name</h2>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Go search by name: \"\r\n            className=\"search-inp\"\r\n            onKeyDown={this.filterSearchForName}\r\n          />\r\n          <table id=\"content-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>Status</th>\r\n                <th>Species</th>\r\n                <th>Type</th>\r\n                <th>Gender</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {items.map((item, line) => (\r\n                <tr key={line}>\r\n                  <td>{item.id}</td>\r\n                  <td>{item.name}</td>\r\n                  <td>{item.status}</td>\r\n                  <td>{item.species}</td>\r\n                  <td>{item.type}</td>\r\n                  <td>{item.gender}</td>\r\n                  <td>\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Edit\"\r\n                      className=\"btn btn-edit\"\r\n                    ></input>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n// { {items.foreach( item=> (\r\n//   <tr>\r\n//   <td key={item.id}>{item.id}</td>\r\n//   <td key={item.name}>{item.name}</td>\r\n//   <td key={item.status}>{item.status}</td>\r\n//   <td key={item.species}>{item.species}</td>\r\n//   <td key={item.type}>{item.type}</td>\r\n//   <td key={item.gender}>{item.gender}</td>\r\n\r\n//   </tr>\r\n// ))}  }\r\n"]},"metadata":{},"sourceType":"module"}